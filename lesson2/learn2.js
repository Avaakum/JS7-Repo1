'use strict';

//условия

// if(1)  //при не связанном с логикой выражении будет
//всегда выдаваться true

let num = 30;


if (num < 49) {
  console.log('Неверно');  
} else if (num > 100) {
  console.log("Верно!");
} else {
  console.log("Еще побольше бы..");
};

//Более короткая запись c помощью "тернарного" оператора. Тернарный - значит 3 аргумента.
(num == 50) ? console.log("Верно!") : console.log("неверно!");

//Далее конструкрция switch, которая поддерживает несколько if
// switch (num) //стандартная запись switch, кода в каждом кейс проверяется на одно значение
switch (true) { //использование нескольких значения для одного случая предполагают написание 
  //в скобках тру
  case num < 49:
    console.log('Неверно');
    break; //остановка, что-бы далее не проверялось
  case num > 100:
    console.log("Верно!");
    break;
  case num > 80:
    console.log("Почти, почтии...!");
    break;
  case num === 50: //ВАЖНО!! Особенность case заключается в том, что если мы проверяем на какое-то
  //конкретное значение переменную, то не надо писать num == 50, а просто 50
    console.log("Всё cплетено...");
    break;
  default:  //Если ни одно условие не подходит, то выполняется defaul,
  // но задавать его не обязательно
    console.log(num);
    break; //директива
}


// Циклы

num = 50;

// ПОСМОТРЕТЬ приоритеты и сочетаемости циклов
while (num < 55) { //простейший цикл вайл
  //происходят действия до условия в скобках
  console.log(num);
  num++;  
}

do { //этот цикл используется только в тех местах, где 
  //нужно сначала сделать действие, а потом уже проверить условие
  console.log(num);
  num++; 
}
while (num < 100)

// Далее топовая основная тема - цикл for.  i - index, но можно использовать и наш num
for (let i = 1; i < 8; i++) { //не делать бесконечных циклов - всё повиснет нахер
  if (i == 6) {
    // break; //прерывает цикл, даже если он не достиг основного условия
    continue; //отлавливает один из шагов(который обозначе усл if), пропускает действие, которое
    //должно было совершиться и продолжается, как до этого условия - перерывание итерации цикла
  }
  console.log(i);
}

// Записать ответы в объект optionalExpenses в формате Номер - Ответ.

// optionalExpenses: {

//   1: “ответ на вопрос”

// }