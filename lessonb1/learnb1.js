'use strict';

//Типы данных еще раз

 let number = 234234; //число
 let string = `строка`;  //это строка вна зависимости от кавык '' "" ``
 let boolean = true; //логический тип д. булинь
//  console.log(a); //null - то, чего не существует
 let b;
 console.log(b);//undefind - то, что заданно, но значения не имеет

 //Объекты

 //Простые + синтаксис объектов
 let obj = new Object();//старые вариант задания объекта
 var object = {
   tikTok: '12:17', //ключ: значение
   apartArea: 190
 }; //объект.. 
obj.apartArea = 190;
//Методы объектов(действия, функции)
let bjo = {
  sayName: function () {
    alert('Johhhhnn!');
  }
};

 //Специальные объекты
 let array = [1, 2, 5, 8];//массив(специальный объект)
 function name(params) {} //функции
 //объекты Даты
 //Регулярные выражения
 //Ошибки


 //Динамическая типизации Типизация данных

// в строку ->
// 1) Первый спосов. Устаревшая команда.
String(false);
// console.log(typeof (String(null)));
// 2) Второй способ. Конкатинация - прибавление строки(даже пустой)
console.log(4 + true + false + "");
//Применяется например для адрессов URL(где идет строка и например прибавляется номер из JS),
console.log('https://vk.com/catalog' + 5);
//  для отправки числовых данных из JS в CSS(которая ест только строки) итд

//в число ->
// 1) Аналогично, как с числом. Исп-ся еще реже из-за 2го способа
console.log(typeof (Number('5')));
// 2) Унарный плюс
console.log(typeof (+'5'));
// 3)Другие команды, которые атоматом делают строку
console.log(parseInt('18.484px', 10));
//Применение. Все что мы получаем от пользователя
//(все внешние данные из prompt, input'ов итд) - это строки
let ans = +prompt('Нет да?', '' ); //уже число

//Логика
//"Неочевдные" логические преобразования. аля "Нативные"
//Всё то, что всегда превращается в неправду(false)
// 0, '', null, undefind, NaN - сущности
//всё остальное true
// 1, ' ' итд....
let switcher = null;
if (switcher) {
  console.log("Lala");
} //null - это нет, условие никогда не выполниться
switcher = 1;
if (switcher) {
  console.log("Lalaland");
} //В данном случае 1 - это true^
// 2)
console.log(typeof(Boolean('5')));
// 3) 
console.log(typeof(!!'5'));


// Функции.
// Function declaration
function foo(fighters) {
  let code = fighters;
} //создается до начала скрипа
//можно использовать в люб месте

// FUNCTION EXPRESSION
let foog = function () {
   let code;  
}; //созд, только когда доходит поток кода
//можно использовать только после объявления

//СТРЕЛОЧНЫЕ ФУНКЦИИ
// () =>










 
 




