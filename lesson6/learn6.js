'use strict';

//СОБЫТИЯ в JS
// let btn = document.getElementsByTagName('button'),
let btn = document.querySelectorAll('button'), //заменяем получение для
    //для того чтобы исп-ть метод форич для нашего псевдомассива кнопок
    wrap = document.querySelector('.wrapper'),
    link = document.querySelector('a');

//второй способ исп событий js через св-во DOM событий 
//первый прямо в html 
btn[0].onclick = function() { //метод 
  alert("Вы нажали первую книпку");
  alert("Вы нажали fdg первую книпку");
};

btn[0].onclick = function () { //метод 
  alert("Вы опяяяяять нажали первую книпку");
}; //отработает только вторая команда, т.к. таким способом можно повесить
//только одня ф-я на 1 эл-т =(
  //плохо по многим причинам, можно не заметить первый такой же обработчик
  //события, иногда нужно удалить это событие после выполнения(таким образом нельзя) итд...

  
//третий способ зе бест: addEventListrner
//сначала пишем эл, потом магич фразу и в сокбках событие без 'on', 
//и далее создаем callback function(то что должно произойти после)
btn[0].addEventListener('click', function () {
  alert("Вы опяяяяять нажали первую книпку");
});
btn[0].addEventListener('click', function () {
  alert("Вы нажали первую книпку");
});
//таким способом отрабатывают оба события

// btn[0].addEventListener('mouseenter', function() {
//   alert('Вы навели на 1!');
// });

//получение данных об эл-е, с которым мы взаимодействуем
//например для условий ...
//для этого существует специальный тип данных "event"
//со своими св-вами и методами
btn[0].addEventListener('click', function (event) { //записывается
  // event или просто 'e'
  console.log('Произошло событие ' + event.type + " на элементе " + event.target);
  //Это спец. св-ва event - тип и цель собития 

  //практикуемся и вешаем измен стилей на цель события
  console.log(event); //выводим сам ивент
  let target = event.target;
  target.style.display = 'none';
});

//теперь тестируем "всплытие событий". Это когда обработчик событий срабат
//сначала на самом вложенном элементе
//Мы поднялись вверх по иерархии,
//где был event, и при нажатии на кнопку таргет именно кнопка,
//при нажатии на wrap таргет становиться блок
wrap.addEventListener('click', function () {
  console.log('Произошло событие ' + event.type + " на элементе " + event.target);  
});


//отменяем стандартные события браузера
//2 способа
link.addEventListener('click', function (event) {
  event.preventDefault(); //отменяем дефолтное событие(переход по ссылочке)
  console.log('Произошло событие ' + event.type + " на элементе " + event.target);  
});

btn.forEach(function (item) {
  item.addEventListener('mouseleave', function () {
    console.log('We exit!');
  });
}); //почему-то это самый предпочтительный метод для назначения обра
//ботчиков событий. имеется ввиду, что для всех эл-в псевдомассива
//лучше использовать именнт метод форич, а не цикл например, так правлиьнее
//пчему-то